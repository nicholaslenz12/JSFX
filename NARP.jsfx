desc:NARP
options:gfx_hz=60

import knobs.jsfx
import shapes.jsfx
import math.jsfx

// ----------------------------------------------------------------------------
// SLIDER DEFINITIONS
// ----------------------------------------------------------------------------
slider1:0<0,6,2{1/1,1/2, 1/4, 1/8, 1/16, 1/32, 1/64}>Rate (Synced)

// ----------------------------------------------------------------------------
// DEFAULT CHANNEL CONFIGURATION
// ----------------------------------------------------------------------------
in_pin:none
out_pin:none

// ----------------------------------------------------------------------------
// INIT
// ----------------------------------------------------------------------------
@init
gfx_ext_retina = 1;

knob1.knob_create(1/2, 1/2, 1/5, 0, 6, 0, 1);
knob1.font.font_create(1, "Arial", 0.1); // wrapper around gfx_setfont
knob1.formatter.formatter_create("1/%d", "Power", "");
knob1.colors_shapes.colors_create(1, 1, 1);

NOTE_ON  = $x90;
NOTE_OFF = $x80;

length = 0.5;
t_beat = 0;

prev_note_ons = 0;
note_on_count = 1;

// ----------------------------------------------------------------------------
// SLIDER
// ----------------------------------------------------------------------------
@slider
knob1.knob_detect_slider();

// ----------------------------------------------------------------------------
// BLOCK
// ----------------------------------------------------------------------------
@block
// while (midirecv(offset, cmd, key, vel)) (
//     cmd == NOTE_ON && vel != 0 ? (
//         note_on_count += 1; // count note-ons
//     ) : (
//         midisend(offset, cmd, key, vel); // passthrough other events
//     );
// );
// 
// initialize start of playback before start of sample processing block

// can we do this elsewhere?
beat_fraction = 2 ^ -slider(knob1.slider_idx);
cycle_rate = 1/srate * tempo/60 / beat_fraction;
sample_position = 0;

cycle_length = srate * 60/tempo * beat_fraction;

note_on_count > 0 && prev_note_ons == 0 ? (
    t_beat = cycle_length;
    prev_note_ons = 1;
);

@block

// ----------------------------------------------------------------------------
// SAMPLE
// ----------------------------------------------------------------------------
@sample
t_beat += 1;

t_beat >= cycle_length ? (
    t_beat -= cycle_length;
    midisend(sample_position, NOTE_ON, 60, 127);
);

t_beat >= length * cycle_length ? (
    midisend(sample_position, NOTE_OFF, 60, 127);
);

sample_position += 1;
// ----------------------------------------------------------------------------
// GRAPHICS
// ----------------------------------------------------------------------------
@gfx 600 600

knob1.knob_draw();
knob1.knob_detect_reset();
knob1.knob_detect_drag();
knob1.knob_update_slider(1);
knob1.knob_draw_arrows();
sliderchange(slider1);
