/*
 Nicholas Lenz
 Github : nicholaslenz12@gmail.com

 Single tap delay. Can also modulate the delay between the left and right channel
 (Ping-Pong). Can be synced to project tempo.

 Needs help:
 - Code is outdated.
 - Needs sample-accurate automation.
 - GUI doesn't work correctly for abs(width) < 1
 > Make GUI like:
   |     |     |         |     |     |
   | | : | | : | | : ->  | : | | : | | :
   -----------------    -----------------
   Rather than:
   
        *     '      ->      '     *     
   -----------------    -----------------
 */

desc:N-Delay

// ----------------------------------------------------------------------------
// SLIDER DEFINITIONS
// ----------------------------------------------------------------------------
slider1:200<1,2000,1>Length (ms)
slider2:40<0,100,1>Feedback
slider3:30<0,100,1>Mix
slider4:100<-100,100,1>Width
slider6:1<0,1,{Off,On}>Tempo Sync
slider7:.5<.125,1,.125>Fraction of Quarter Note
slider8:1<0,1,{Stereo,Ping-Pong}>Delay Mode

// ----------------------------------------------------------------------------
// DEFAULT CHANNEL CONFIGURATION
// ----------------------------------------------------------------------------
in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

// ----------------------------------------------------------------------------
// INIT
// ----------------------------------------------------------------------------
@init
cycle_pos = 0;

// ----------------------------------------------------------------------------
// SLIDER
// ----------------------------------------------------------------------------
@slider
tempo_sync = slider6;
tempo_sync ? ( delay_len = slider7*srate*60; )
        : ( delay_len = slider1*srate/1000; );

feedback = slider2/100;

mix = slider3/100;
dry_mix = 1 - mix;

width = (slider4+100)/200;
rev_width = 1 - width;

delay_mode = slider8;
delay_mode == 1 ? pp = 0;

// ----------------------------------------------------------------------------
// BLOCK
// ----------------------------------------------------------------------------
@block
// set delay length in samples.
tempo_sync && delay_len == slider7*srate*60 ? delay_len /= tempo;

// ----------------------------------------------------------------------------
// SAMPLE
// ----------------------------------------------------------------------------
@sample
// Allocate memory
delay_buffer = 2*cycle_pos;
effect_left = delay_buffer[0];
effect_right = delay_buffer[1];

delay_mode > 0 ? // If set to Ping-Pong
(
  pp == 0 ? // Current echo is in left channel
  (
    // Set value in feedback loop, per channel
    delay_buffer[0] = spl0 + effect_left*feedback;
    delay_buffer[1] = spl1 + effect_right*feedback;

    // Set current sample value, per channel
    spl0 = (spl0*dry_mix + width*effect_left*mix);
    spl1 = (spl1*dry_mix + rev_width*effect_right*mix);
  ) :  // Current echo is in left channel
  (
    // Set value in feedback loop, per channel
    delay_buffer[0] = spl0 + effect_left*feedback;
    delay_buffer[1] = spl1 + effect_right*feedback;

    // Set current sample value, per channel
    spl0 = (spl0*dry_mix + rev_width*effect_left*mix);
    spl1 = (spl1*dry_mix + width*effect_right*mix);
  );
): // If set to Stereo
(
  // Set value in feedback loop, per channel
  delay_buffer[0] = spl0 + effect_left*feedback;
  delay_buffer[1] = spl1 + effect_right*feedback;

  // Set current sample value, per channel
  spl0 = (spl0*dry_mix + effect_left*mix);
  spl1 = (spl1*dry_mix + effect_right*mix);
);

(cycle_pos+=1) > delay_len ? // If last sample for current echo reached
(
  cycle_pos = 0; // Reset sample position of delay
  pp = 1 - pp; // Switch primary channel for Ping-Pong
);

// ----------------------------------------------------------------------------
// GRAPHICS
// ----------------------------------------------------------------------------
@gfx 200 100
gfx_x = gfx_w/4;
gfx_y = gfx_h/2;

gfx_r = gfx_g = 0;
gfx_b = 1;

// gfx_circle(gfx_x, gfx_y, 1/2^log10(1/spl0)*min(gfx_w/8,gfx_h/4), 1);

gfx_r = gfx_g = 1;

pp == 0 || delay_mode == 0 ?
(
    effect_left > 0 ?
    (
        gfx_circle(gfx_x, gfx_y, 1/2^-log10(effect_left)*min(gfx_w/8,gfx_h/4), 1);
    )
);

gfx_x = 3*gfx_w/4;
gfx_y = gfx_h/2;

pp == 1 || delay_mode == 0 ?
(
    effect_right > 0 ?
    (
        gfx_circle(gfx_x, gfx_y, 1/2^-log10(effect_right)*min(gfx_w/8,gfx_h/4), 1);
    )
);
