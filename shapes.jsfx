desc:Shapes

@init
// direction is in degrees (clockwise!)
// for now [0, 360); any modulo 360 should be allowed
function draw_arrow(x, y, length, head_size, direction, off_rad) (
    length    *= min(gfx_w, gfx_h);
    head_size *= min(gfx_w, gfx_h);

    rad = direction / 360 * 2 * $pi;
    x2 = x + length * cos(rad);
    y2 = y + length * sin(rad);
    x3 = x2 - head_size * cos(rad - off_rad);
    y3 = y2 - head_size * sin(rad - off_rad);
    x4 = x2 - head_size * cos(rad + off_rad);
    y4 = y2 - head_size * sin(rad + off_rad);

    gfx_line(x, y, x2, y2);
    gfx_triangle(x2, y2, x3, y3, x4, y4);
);

function draw_line(x, y, length, thick, direction) (
    length    *= min(gfx_w, gfx_h);
    thick     *= min(gfx_w, gfx_h);

    rad = direction / 360 * 2 * $pi;
    x2 = x + length * cos(rad);
    y2 = y + length * sin(rad);

    half_thick = thick / 2;
    r_x1 = x2 + half_thick * cos(rad - $pi/2);
    r_y1 = y2 + half_thick * sin(rad - $pi/2);
    r_x2 = x2 + half_thick * cos(rad + $pi/2);
    r_y2 = y2 + half_thick * sin(rad + $pi/2);
    r_x3 =  x + half_thick * cos(rad - $pi/2);
    r_y3 =  y + half_thick * sin(rad - $pi/2);
    r_x4 =  x + half_thick * cos(rad + $pi/2);
    r_y4 =  y + half_thick * sin(rad + $pi/2);

    gfx_triangle(
        r_x1, r_y1,
        r_x2, r_y2,
        r_x3, r_y3,
        r_x4, r_y4
    );
);

function draw_hex(x, y, circumradius) (
    p.complex2(circumradius, 0);
    x1 = x + p.creal();
    y1 = y + p.cim();
    p.caddphase($pi / 3);
    x2 = x + caddphase__.creal();
    y2 = y + caddphase__.cim();
    p.caddphase(2 * $pi / 3);
    x3 = x + caddphase__.creal();
    y3 = y + caddphase__.cim();
    p.caddphase($pi);
    x4 = x + caddphase__.creal();
    y4 = y + caddphase__.cim();
    p.caddphase(4 * $pi / 3);
    x5 = x + caddphase__.creal();
    y5 = y + caddphase__.cim();
    p.caddphase(4 * $pi / 3);
    x5 = x + caddphase__.creal();
    y5 = y + caddphase__.cim();
    p.caddphase(5 * $pi / 3);
    x6 = x + caddphase__.creal();
    y6 = y + caddphase__.cim();

    gfx_triangle(
        x1, y1,
        x2, y2,
        x3, y3,
        x4, y4,
        x5, y5,
        x6, y6
    );
)